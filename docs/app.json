[{"name":"app.R","content":"library(shiny)\nlibrary(stargazer)\nset.seed(1)\n\n# shinylive::export(\"app\", \"docs\")\n\n# Define UI for app that draws a histogram ----\nui <- \n  shinyUI(\n\n    navbarPage(title = \"Bivariate linear regression\", \n               windowTitle = \"Bivariate linear regression\",\n\n        tabPanel(\"Overview\",\n            fluidRow(\n                column(2, \n                    p(\"\")\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"\", \"$$N$$\", min = 1, max = 300, value = 50, \n                                step = 2, width = \"100%\"))\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"\", \"$$\\\\beta_0$$\", min = 0, max = 10, \n                                value = 5, step = 0.5, width = \"100%\"))\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"\", \"$$\\\\beta_1$$\", min = -10, max = 10, \n                                value = 1, step = 0.25, width = \"100%\"))\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"\", \"$$\\\\sigma$$\", min = 0, max = 3, \n                                value = 0.075, step = 0.025, width = \"100%\"))\n                ),\n                column(2,\n                    p(\"\")\n                )\n            ),\n            fluidRow(\n                column(1, \n                    p(\"\")\n                ),\n                column(10, \n                    h3(\"Description\"),\n                    p(\"The purpose of this application is to aid in the \n                      comprehension of bivariate linear regression. Specifically\n                      it serves as an intro to the linear model. To accomplish \n                      this, the app fits a linear equation to simulated data using \n                      the linear formula:\"),\n                    withMathJax(\n                        helpText(\"$$y = \\\\beta_0 + \\\\beta_1X_1 + \\\\epsilon$$\")),\n                    p(\"The x- and y-values are random uniform values given a \n                      linear relationship using the formula:\"),\n                    p(\"$$\\\\beta_0 + x * \\\\beta_1 + N$$\"),\n                    p(\"Where the slope, intercept and standard deviation are \n                      user defined via input sliders (see above). This is \n                      accomplished in R via\",\n                      code(\"y = beta0 + x * beta1 + rnorm(n, sd = sigma)\"),\"The \n                      result is plotted and the best fit line obtained using \n                      least squares estimation is shown in purple, along \n                      with the mean of x and y. The model output is displayed \n                      via the package\", code(\"stargazer\"), \"and also updates in \n                      real time. Finally, residual plots are displayed to obtain\n                      a better understanding of model fit. The source code is \n                      available on github (see below).\")\n                ),\n                column(1, \n                    p(\"\")\n                )\n            ),\n            br(), br(), br(),\n            fluidRow(\n                column(1,\n                    p(\"\")\n                ),\n                column(10,\n                    wellPanel(\n                    p(strong(\"Created by:\"), \n                    tags$a(\"Joseph V. Casillas\", href=\"http://www.jvcasillas.com\"),\n                    br(), strong(\"Source code:\"), \n                    tags$a(\"Github\", href=\"https://github.com/jvcasill/shiny_bivariate_regression/\"))\n                    )\n                ),\n                column(1, \n                       p(\"\")\n                )\n            )\n        ),\n    \n        tabPanel(\"Plot\",\n            fluidRow(\n                column(2, \n                    p(\"\")\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"n\", \"$$N$$\", min = 1, max = 300, value = 50, \n                                step = 2, width = \"100%\"))\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"beta0\", \"$$\\\\beta_0$$\", min = 0, max = 10, \n                                value = 5, step = 0.5, width = \"100%\"))\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"beta1\", \"$$\\\\beta_1$$\", min = -10, max = 10, \n                                value = 1, step = 0.25, width = \"100%\"))\n                ),\n                column(2,\n                    div(align = \"center\", \n                    sliderInput(\"sigma\", \"$$\\\\sigma$$\", min = 0, max = 3, \n                                value = 0.075, step = 0.025, width = \"100%\"))\n                ),\n                column(2,\n                    p(\"\")\n                )\n            ),\n\n            fluidRow(\n                column(1,\n                    p(\"\")\n                ),\n                column(5,\n                br(),\n                tabsetPanel(type = \"tabs\",\n                    tabPanel(\"Plot\", plotOutput(\"modPlot\")),\n                    tabPanel(\"Residuals\", plotOutput(\"resid\"))\n                    )\n                ),\n                column(5,\n                    br(),br(),br(),br(),br(),br(),br(),br(),\n                    div(align = \"center\", tableOutput(\"values\"))\n                ),\n                column(1, \n                    p(\"\")\n                )\n            ),\n            br(),\n            fluidRow(\n                column(1,\n                    p(\"\")\n                ),\n                column(10,\n                    wellPanel(\n                    p(strong(\"Created by:\"), \n                    tags$a(\"Joseph V. Casillas\", href=\"http://www.jvcasillas.com\"),\n                    br(), strong(\"Source code:\"), \n                    tags$a(\"Github\", href=\"https://github.com/jvcasill/shiny_bivariate_regression/\"))\n                    )\n                ),\n                column(1, \n                    p(\"\")\n                )\n            )\n        )\n    )\n)\n\n\n\n# Define server logic required to draw a histogram ----\n\nserver <- function(input, output) {\n  output$currentTime <- renderText({\n    invalidateLater(1000)\n    paste(Sys.time())\n  })\n  \n  x <- reactive({\n    x <- runif(input$n)\n  })\n  y <- reactive({\n    input$beta0 + x() * input$beta1 + rnorm(input$n, sd = input$sigma)\n  })\n  \n  mod <- reactive({\n    mod <- lm(y() ~ x())\n  })\n  output$modPlot <- renderPlot({\n    x <- x()\n    y <- y()\n    mod <- mod()\n    \n    plot(x, y)\n    points(x, y, pch = 16, col = rgb(150, 0, 204, 102, \n                                     maxColorValue = 255))\n    abline(c(mod$coeff[1], mod$coeff[2]), lty = 1, lwd = 2,\n           col = rgb(0, 0, 204, 102, maxColorValue = 255))\n    abline(a = mean(y), b = 0, col = 'grey', lty = 2)\n    abline(v = mean(x), col = 'grey', lty = 3)\n    legend(\"topleft\", lty = c(2, 3), col = \"grey\",\n           legend = c(expression(bar(y)), expression(bar(x))))\n  })\n  \n  output$values <- renderPrint({\n    fit <- mod()\n    stargazer(fit, type = 'html', single.row=TRUE, \n              ci=TRUE, ci.level=0.95, align=FALSE,\n              covariate.labels = c(\"x\", \"Intercept\"), \n              dep.var.labels = \"y\")\n  })\n  \n  output$resid <- renderPlot({\n    fit <- mod()\n    par(mfrow = c(2, 2))\n    plot(fit)\n  })\n  \n  output$residValues <- renderPrint({\n    fit <- mod()\n    stargazer(fit, type = 'html', single.row=TRUE, \n              ci=TRUE, ci.level=0.95, align=FALSE,\n              covariate.labels = c(\"x\", \"Intercept\"), \n              dep.var.labels = \"y\")\n  })\n}\n\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n","type":"text"}]
